{"map":"{\"version\":3,\"file\":\"Triangle.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/common/Triangle.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import Vector from './Vector';\r\nimport Line from './Line';\r\nimport { uniqueId } from '../util';\r\nimport { Matrix4 } from './Matrix';\r\nexport default class Triangle {\r\n    constructor(a, b, c) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.id = uniqueId();\r\n        const ab = new Line(a, b);\r\n        const bc = new Line(b, c);\r\n        const ca = new Line(c, a);\r\n        this.lines = { ab, bc, ca };\r\n    }\r\n    get centroid() {\r\n        return Vector.FindPolyCentroid(this.points);\r\n    }\r\n    get points() {\r\n        return [this.a, this.b, this.c];\r\n    }\r\n    get linesArray() {\r\n        return [this.lines.ab, this.lines.bc, this.lines.ca];\r\n    }\r\n    equals(triangle) {\r\n        const { ab, bc, ca } = this.lines;\r\n        const sameAB = ab.equals(triangle.lines.ab) ||\r\n            ab.equals(triangle.lines.bc) ||\r\n            ab.equals(triangle.lines.ca);\r\n        const sameBC = bc.equals(triangle.lines.ab) ||\r\n            bc.equals(triangle.lines.bc) ||\r\n            bc.equals(triangle.lines.ca);\r\n        const sameCA = ca.equals(triangle.lines.ab) ||\r\n            ca.equals(triangle.lines.bc) ||\r\n            ca.equals(triangle.lines.ca);\r\n        return sameAB && sameBC && sameCA;\r\n    }\r\n    isPointInCircumcircle(point) {\r\n        const ax = this.a.x;\r\n        const ay = this.a.y;\r\n        const bx = this.b.x;\r\n        const by = this.b.y;\r\n        const cx = this.c.x;\r\n        const cy = this.c.y;\r\n        const a = ax;\r\n        const b = ay;\r\n        const c = ax * ax + ay * ay;\r\n        const d = 1;\r\n        const e = bx;\r\n        const f = by;\r\n        const g = bx * bx + by * by;\r\n        const h = 1;\r\n        const i = cx;\r\n        const j = cy;\r\n        const k = cx * cx + cy * cy;\r\n        const l = 1;\r\n        const m = point.x;\r\n        const n = point.y;\r\n        const o = point.x * point.x + point.y * point.y;\r\n        const p = 1;\r\n        const matrix = new Matrix4(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);\r\n        return matrix.determine() < 0;\r\n    }\r\n    hasPoint(point) {\r\n        return this.a.equals(point) || this.b.equals(point) || this.c.equals(point);\r\n    }\r\n    hasAnyPoint(points) {\r\n        return (points.filter((point) => {\r\n            return this.hasPoint(point);\r\n        }).length !== 0);\r\n    }\r\n    static LinesFromArray(triangles) {\r\n        return triangles.reduce((accumulator, triangle) => {\r\n            accumulator.push(...triangle.linesArray);\r\n            return accumulator;\r\n        }, []);\r\n    }\r\n    static GetUniqueLines(triangles) {\r\n        const lines = Triangle.LinesFromArray(triangles);\r\n        return lines.filter((line) => Line.IsUnique(line, lines));\r\n    }\r\n}\r\n//# sourceMappingURL=Triangle.js.map","dtsmap":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/common/Triangle.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"Triangle.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/common/Triangle.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,OAAO,EAAE,EAAE,EAAE,MAAM,eAAe,CAAC;AAInC,aAAK,aAAa,GAAG;IAAE,EAAE,EAAE,IAAI,CAAC;IAAC,EAAE,EAAE,IAAI,CAAC;IAAC,EAAE,EAAE,IAAI,CAAA;CAAE,CAAC;AAEtD,MAAM,CAAC,OAAO,eAAgB,YAAW,EAAE;IAI7B,QAAQ,CAAC,CAAC,EAAE,MAAM;IAAE,QAAQ,CAAC,CAAC,EAAE,MAAM;IAAE,QAAQ,CAAC,CAAC,EAAE,MAAM;IAHtE,EAAE,EAAE,MAAM,CAAc;IACxB,QAAQ,CAAC,KAAK,EAAE,aAAa,CAAC;gBAET,CAAC,EAAE,MAAM,EAAW,CAAC,EAAE,MAAM,EAAW,CAAC,EAAE,MAAM;aAQlE,QAAQ,EAAI,MAAM;aAIlB,MAAM,EAAI,MAAM,EAAE;aAIlB,UAAU,EAAI,IAAI,EAAE;IAIxB,MAAM,CAAC,QAAQ,EAAE,QAAQ,GAAG,OAAO;IAkBnC,qBAAqB,CAAC,KAAK,EAAE,MAAM,GAAG,OAAO;IA8C7C,QAAQ,CAAC,KAAK,EAAE,MAAM,GAAG,OAAO;IAIhC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO;IAQtC,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAE;IAOpD,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAE;CAIrD\"}"},"dts":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/common/Triangle.d.ts","text":"import Vector from './Vector';\r\nimport Line from './Line';\r\nimport { id } from '../interfaces';\r\ndeclare type triangleLines = {\r\n    ab: Line;\r\n    bc: Line;\r\n    ca: Line;\r\n};\r\nexport default class Triangle implements id {\r\n    readonly a: Vector;\r\n    readonly b: Vector;\r\n    readonly c: Vector;\r\n    id: number;\r\n    readonly lines: triangleLines;\r\n    constructor(a: Vector, b: Vector, c: Vector);\r\n    readonly centroid: Vector;\r\n    readonly points: Vector[];\r\n    readonly linesArray: Line[];\r\n    equals(triangle: Triangle): boolean;\r\n    isPointInCircumcircle(point: Vector): boolean;\r\n    hasPoint(point: Vector): boolean;\r\n    hasAnyPoint(points: Vector[]): boolean;\r\n    static LinesFromArray(triangles: Triangle[]): Line[];\r\n    static GetUniqueLines(triangles: Triangle[]): Line[];\r\n}\r\nexport {};\r\n//# sourceMappingURL=Triangle.d.ts.map"}}
