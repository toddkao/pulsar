{"map":"{\"version\":3,\"file\":\"LineIntersection.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/common/LineIntersection.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { Matrix2 } from '../common/Matrix';\r\nimport { isNumeric } from '../util';\r\nimport Vector from '../common/Vector';\r\n// https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\r\nexport default class LineIntersection {\r\n    constructor(line1, line2) {\r\n        this.line1 = line1;\r\n        this.line2 = line2;\r\n        // points\r\n        this.x1 = this.line1.a.x;\r\n        this.y1 = this.line1.a.y;\r\n        this.x2 = this.line1.b.x;\r\n        this.y2 = this.line1.b.y;\r\n        this.x3 = this.line2.a.x;\r\n        this.y3 = this.line2.a.y;\r\n        this.x4 = this.line2.b.x;\r\n        this.y4 = this.line2.b.y;\r\n        // shared matrices\r\n        const e = new Matrix2(this.x1, 1, this.x2, 1);\r\n        const f = new Matrix2(this.y1, 1, this.y2, 1);\r\n        const g = new Matrix2(this.x3, 1, this.x4, 1);\r\n        const h = new Matrix2(this.y3, 1, this.y4, 1);\r\n        const efgh = new Matrix2(e.determine(), f.determine(), g.determine(), h.determine());\r\n        this.efghDeterminant = efgh.determine();\r\n    }\r\n    get intersects() {\r\n        const areValidCoords = isNumeric(this.point.x) && isNumeric(this.point.y);\r\n        return areValidCoords && this.isOnSegments();\r\n    }\r\n    get point() {\r\n        const x = this.getX();\r\n        const y = this.getY();\r\n        return new Vector({ x, y });\r\n    }\r\n    getX() {\r\n        const a = new Matrix2(this.x1, this.y1, this.x2, this.y2);\r\n        const b = new Matrix2(this.x1, 1, this.x2, 1);\r\n        const c = new Matrix2(this.x3, this.y3, this.x4, this.y4);\r\n        const d = new Matrix2(this.x3, 1, this.x4, 1);\r\n        const abcd = new Matrix2(a.determine(), b.determine(), c.determine(), d.determine());\r\n        return abcd.determine() / this.efghDeterminant;\r\n    }\r\n    getY() {\r\n        const a = new Matrix2(this.x1, this.y1, this.x2, this.y2);\r\n        const b = new Matrix2(this.y1, 1, this.y2, 1);\r\n        const c = new Matrix2(this.x3, this.y3, this.x4, this.y4);\r\n        const d = new Matrix2(this.y3, 1, this.y4, 1);\r\n        const abcd = new Matrix2(a.determine(), b.determine(), c.determine(), d.determine());\r\n        return abcd.determine() / this.efghDeterminant;\r\n    }\r\n    isOnSegments() {\r\n        const a = new Matrix2(this.x1 - this.x3, this.x3 - this.x4, this.y1 - this.y3, this.y3 - this.y4);\r\n        const b = new Matrix2(this.x1 - this.x2, this.x3 - this.x4, this.y1 - this.y2, this.y3 - this.y4);\r\n        const c = new Matrix2(this.x1 - this.x2, this.x1 - this.x3, this.y1 - this.y2, this.y1 - this.y3);\r\n        const d = new Matrix2(this.x1 - this.x2, this.x3 - this.x4, this.y1 - this.y2, this.y3 - this.y4);\r\n        const divisionAB = a.determine() / b.determine();\r\n        const divisionCD = -(c.determine() / d.determine());\r\n        const isOnSegmentA = divisionAB >= 0 && divisionAB <= 1;\r\n        const isOnSegmentB = divisionCD >= 0 && divisionCD <= 1;\r\n        return isOnSegmentA && isOnSegmentB;\r\n    }\r\n}\r\n//# sourceMappingURL=LineIntersection.js.map","dtsmap":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/common/LineIntersection.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"LineIntersection.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/common/LineIntersection.ts\"],\"names\":[],\"mappings\":\"AAEA,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,OAAO,MAAM,MAAM,kBAAkB,CAAC;AAItC,MAAM,CAAC,OAAO;IAWA,OAAO,CAAC,KAAK;IAAQ,OAAO,CAAC,KAAK;IAV9C,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAS;IAC5B,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAS;IAC5B,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAS;IAC5B,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAS;IAC5B,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAS;IAC5B,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAS;IAC5B,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAS;IAC5B,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAS;IAC5B,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAS;gBAErB,KAAK,EAAE,IAAI,EAAU,KAAK,EAAE,IAAI;aAyBhD,UAAU,EAAI,OAAO;aAMrB,KAAK,EAAI,MAAM;IAMnB,OAAO,CAAC,IAAI;IAeZ,OAAO,CAAC,IAAI;IAeZ,OAAO,CAAC,YAAY;CAkCrB\"}"},"dts":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/common/LineIntersection.d.ts","text":"import Line from './Line';\r\nimport Vector from '../common/Vector';\r\nexport default class LineIntersection {\r\n    private line1;\r\n    private line2;\r\n    private readonly x1;\r\n    private readonly y1;\r\n    private readonly x2;\r\n    private readonly y2;\r\n    private readonly x3;\r\n    private readonly y3;\r\n    private readonly x4;\r\n    private readonly y4;\r\n    private readonly efghDeterminant;\r\n    constructor(line1: Line, line2: Line);\r\n    readonly intersects: boolean;\r\n    readonly point: Vector;\r\n    private getX;\r\n    private getY;\r\n    private isOnSegments;\r\n}\r\n//# sourceMappingURL=LineIntersection.d.ts.map"}}
