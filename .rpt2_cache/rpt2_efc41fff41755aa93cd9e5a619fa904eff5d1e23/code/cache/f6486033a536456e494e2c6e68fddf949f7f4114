{"code":"import { Line } from '../common';\r\nexport default class MinimumSpanningTree {\r\n    constructor({ lines }) {\r\n        this.lines = [];\r\n        this._nonMinSpanLines = [];\r\n        this.uniqueLines = [];\r\n        this.triangulationLines = [];\r\n        this.triangulationLines = lines;\r\n    }\r\n    get nonMinSpanLines() {\r\n        return this._nonMinSpanLines;\r\n    }\r\n    start() {\r\n        this.getLines();\r\n        this.uniqueLines.forEach((line) => line.makeDisjoinedSets());\r\n        this.uniqueLines.forEach((line, i) => {\r\n            if (!line.a.set.equals(line.b.set)) {\r\n                line.b.set = line.a.set.merge(line.b.set);\r\n                this.lines.push(line);\r\n                this._nonMinSpanLines[i] = null;\r\n            }\r\n        });\r\n        this._nonMinSpanLines = this._nonMinSpanLines.filter((line) => line);\r\n    }\r\n    getLines() {\r\n        let lines = Line.RemoveDuplicates(this.triangulationLines);\r\n        this.uniqueLines = [...lines];\r\n        this._nonMinSpanLines = [...lines];\r\n    }\r\n}\r\n"}
