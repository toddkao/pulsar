{"code":"import { Matrix2 } from '../common/Matrix';\r\nimport { isNumeric } from '../util';\r\nimport Vector from '../common/Vector';\r\n// https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\r\nexport default class LineIntersection {\r\n    constructor(line1, line2) {\r\n        this.line1 = line1;\r\n        this.line2 = line2;\r\n        // points\r\n        this.x1 = this.line1.a.x;\r\n        this.y1 = this.line1.a.y;\r\n        this.x2 = this.line1.b.x;\r\n        this.y2 = this.line1.b.y;\r\n        this.x3 = this.line2.a.x;\r\n        this.y3 = this.line2.a.y;\r\n        this.x4 = this.line2.b.x;\r\n        this.y4 = this.line2.b.y;\r\n        // shared matrices\r\n        const e = new Matrix2(this.x1, 1, this.x2, 1);\r\n        const f = new Matrix2(this.y1, 1, this.y2, 1);\r\n        const g = new Matrix2(this.x3, 1, this.x4, 1);\r\n        const h = new Matrix2(this.y3, 1, this.y4, 1);\r\n        const efgh = new Matrix2(e.determine(), f.determine(), g.determine(), h.determine());\r\n        this.efghDeterminant = efgh.determine();\r\n    }\r\n    get intersects() {\r\n        const areValidCoords = isNumeric(this.point.x) && isNumeric(this.point.y);\r\n        return areValidCoords && this.isOnSegments();\r\n    }\r\n    get point() {\r\n        const x = this.getX();\r\n        const y = this.getY();\r\n        return new Vector({ x, y });\r\n    }\r\n    getX() {\r\n        const a = new Matrix2(this.x1, this.y1, this.x2, this.y2);\r\n        const b = new Matrix2(this.x1, 1, this.x2, 1);\r\n        const c = new Matrix2(this.x3, this.y3, this.x4, this.y4);\r\n        const d = new Matrix2(this.x3, 1, this.x4, 1);\r\n        const abcd = new Matrix2(a.determine(), b.determine(), c.determine(), d.determine());\r\n        return abcd.determine() / this.efghDeterminant;\r\n    }\r\n    getY() {\r\n        const a = new Matrix2(this.x1, this.y1, this.x2, this.y2);\r\n        const b = new Matrix2(this.y1, 1, this.y2, 1);\r\n        const c = new Matrix2(this.x3, this.y3, this.x4, this.y4);\r\n        const d = new Matrix2(this.y3, 1, this.y4, 1);\r\n        const abcd = new Matrix2(a.determine(), b.determine(), c.determine(), d.determine());\r\n        return abcd.determine() / this.efghDeterminant;\r\n    }\r\n    isOnSegments() {\r\n        const a = new Matrix2(this.x1 - this.x3, this.x3 - this.x4, this.y1 - this.y3, this.y3 - this.y4);\r\n        const b = new Matrix2(this.x1 - this.x2, this.x3 - this.x4, this.y1 - this.y2, this.y3 - this.y4);\r\n        const c = new Matrix2(this.x1 - this.x2, this.x1 - this.x3, this.y1 - this.y2, this.y1 - this.y3);\r\n        const d = new Matrix2(this.x1 - this.x2, this.x3 - this.x4, this.y1 - this.y2, this.y3 - this.y4);\r\n        const divisionAB = a.determine() / b.determine();\r\n        const divisionCD = -(c.determine() / d.determine());\r\n        const isOnSegmentA = divisionAB >= 0 && divisionAB <= 1;\r\n        const isOnSegmentB = divisionCD >= 0 && divisionCD <= 1;\r\n        return isOnSegmentA && isOnSegmentB;\r\n    }\r\n}\r\n"}
