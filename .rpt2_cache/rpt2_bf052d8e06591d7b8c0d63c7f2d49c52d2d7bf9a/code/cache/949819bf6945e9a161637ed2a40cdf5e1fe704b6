{"map":"{\"version\":3,\"file\":\"QuadTree.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/quadtree/QuadTree.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { Vector, Shape } from '../common';\r\nexport default class QuadTree {\r\n    constructor(shape, points) {\r\n        this.shape = shape;\r\n        this.points = points;\r\n        this.children = [];\r\n        this.containedPoints = [];\r\n        this.capacity = 1;\r\n        this.start(points);\r\n    }\r\n    start(points) {\r\n        for (let i = 0; i < points.length; i++) {\r\n            const point = points[i];\r\n            if (!this.shape.containsPoint(point))\r\n                continue;\r\n            if (this.containedPoints.length < this.capacity) {\r\n                point.quadTree = this;\r\n                this.containedPoints.push(point);\r\n            }\r\n            else {\r\n                this.containedPoints.length = 0;\r\n                this.divide(points);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    findChildThatContains(point) {\r\n        const contains = this.shape.containsPoint(point);\r\n        const hasChildren = this.children.length > 0;\r\n        if (contains) {\r\n            if (hasChildren) {\r\n                return this.children.find((child) => {\r\n                    return child.findChildThatContains(point) !== null;\r\n                });\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    divide(points) {\r\n        const { topLeft, topRight, bottomLeft, bottomRight, } = this.shape.boundingBox;\r\n        const { top, bottom, left, right } = this.shape.boundingBox.midpoints;\r\n        const centroid = Vector.FindPolyCentroid([\r\n            top,\r\n            bottom,\r\n            left,\r\n            right,\r\n        ]);\r\n        const shape1 = new Shape([topLeft, top, centroid, left]);\r\n        const quad1 = new QuadTree(shape1, points);\r\n        const shape2 = new Shape([top, topRight, right, centroid]);\r\n        const quad2 = new QuadTree(shape2, points);\r\n        const shape3 = new Shape([centroid, right, bottomRight, bottom]);\r\n        const quad3 = new QuadTree(shape3, points);\r\n        const shape4 = new Shape([centroid, bottom, bottomLeft, left]);\r\n        const quad4 = new QuadTree(shape4, points);\r\n        this.children.push(quad1, quad2, quad3, quad4);\r\n        this.children.forEach((child) => {\r\n            child.parent = this;\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=QuadTree.js.map","dtsmap":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/quadtree/QuadTree.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"QuadTree.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/quadtree/QuadTree.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,WAAW,CAAC;AAE1C,MAAM,CAAC,OAAO;IAOO,KAAK,EAAE,KAAK;IAAE,OAAO,CAAC,MAAM;IAN/C,QAAQ,EAAE,QAAQ,EAAE,CAAM;IAC1B,eAAe,EAAE,MAAM,EAAE,CAAM;IAE/B,MAAM,EAAE,QAAQ,CAAC;IACjB,OAAO,CAAC,QAAQ,CAAa;gBAEV,KAAK,EAAE,KAAK,EAAU,MAAM,EAAE,MAAM,EAAE;IAIzD,OAAO,CAAC,KAAK;IAiBb,qBAAqB,CAAC,KAAK,EAAE,MAAM,GAAG,QAAQ;IAiB9C,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI;CAiC/B\"}"},"dts":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/quadtree/QuadTree.d.ts","text":"import { Vector, Shape } from '../common';\r\nexport default class QuadTree {\r\n    shape: Shape;\r\n    private points;\r\n    children: QuadTree[];\r\n    containedPoints: Vector[];\r\n    parent: QuadTree;\r\n    private capacity;\r\n    constructor(shape: Shape, points: Vector[]);\r\n    private start;\r\n    findChildThatContains(point: Vector): QuadTree;\r\n    divide(points: Vector[]): void;\r\n}\r\n//# sourceMappingURL=QuadTree.d.ts.map"}}
