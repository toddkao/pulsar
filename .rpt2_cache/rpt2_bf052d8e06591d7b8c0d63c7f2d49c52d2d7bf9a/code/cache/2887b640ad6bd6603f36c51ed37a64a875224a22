{"map":"{\"version\":3,\"file\":\"random.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/util/random.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,MAAM,MAAM,kBAAkB,CAAC;AAGtC,MAAM,SAAS,GAAG,CAAC,GAAW,EAAE,GAAW,EAAU,EAAE;IACrD,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC;AAEF,MAAM,WAAW,GAAG,CAAC,GAAW,EAAE,GAAW,EAAU,EAAE;IACvD,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAC3C,CAAC,CAAC;AAEF,MAAM,WAAW,GAAG,GAAG,EAAE;IACvB,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC5B,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC5B,MAAM,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC5B,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AAC/B,CAAC,CAAC;AAEF,MAAM,WAAW,GAAG,CAAC,EACnB,OAAO,EACP,QAAQ,EACR,UAAU,GACE,EAAU,EAAE;IACxB,MAAM,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAM,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IAE7C,OAAO,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,CAAC,KAAa,EAAE,GAAgB,EAAY,EAAE;IACjE,MAAM,MAAM,GAAa,EAAE,CAAC;IAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;KAC/B;IAED,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,CAAC\"}","code":"import Vector from '../common/Vector';\r\nconst randomInt = (min, max) => {\r\n    return Math.round(randomFloat(min, max));\r\n};\r\nconst randomFloat = (min, max) => {\r\n    return Math.random() * (max - min) + min;\r\n};\r\nconst randomColor = () => {\r\n    const r = randomInt(0, 255);\r\n    const g = randomInt(0, 255);\r\n    const b = randomInt(0, 255);\r\n    return `rgb(${r},${g},${b})`;\r\n};\r\nconst randomPoint = ({ topLeft, topRight, bottomLeft, }) => {\r\n    const x = randomInt(topLeft.x, topRight.x);\r\n    const y = randomInt(bottomLeft.y, topLeft.y);\r\n    return new Vector({ x, y });\r\n};\r\nconst randomPoints = (count, box) => {\r\n    const points = [];\r\n    for (let i = 0; i < count; i++) {\r\n        points.push(randomPoint(box));\r\n    }\r\n    return points;\r\n};\r\nexport { randomInt, randomFloat, randomColor, randomPoint, randomPoints };\r\n//# sourceMappingURL=random.js.map","dtsmap":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/util/random.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"random.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/util/random.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,MAAM,MAAM,kBAAkB,CAAC;AACtC,OAAO,WAAW,MAAM,uBAAuB,CAAC;AAEhD,QAAA,MAAM,SAAS,sCAEd,CAAC;AAEF,QAAA,MAAM,WAAW,sCAEhB,CAAC;AAEF,QAAA,MAAM,WAAW,cAKhB,CAAC;AAEF,QAAA,MAAM,WAAW,6DAShB,CAAC;AAEF,QAAA,MAAM,YAAY,+CAQjB,CAAC;AAEF,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,CAAC\"}"},"dts":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/util/random.d.ts","text":"import Vector from '../common/Vector';\r\nimport BoundingBox from '../common/BoundingBox';\r\ndeclare const randomInt: (min: number, max: number) => number;\r\ndeclare const randomFloat: (min: number, max: number) => number;\r\ndeclare const randomColor: () => string;\r\ndeclare const randomPoint: ({ topLeft, topRight, bottomLeft, }: BoundingBox) => Vector;\r\ndeclare const randomPoints: (count: number, box: BoundingBox) => Vector[];\r\nexport { randomInt, randomFloat, randomColor, randomPoint, randomPoints };\r\n//# sourceMappingURL=random.d.ts.map"}}
