{"map":"{\"version\":3,\"file\":\"DisjoinedSet.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/triangulation/DisjoinedSet.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AAGnC,MAAM,CAAC,OAAO;IAIZ,YAAY,KAAa;QAHzB,OAAE,GAAW,QAAQ,EAAE,CAAC;QAItB,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,EAAE,EAAE,EAAgB;QACzB,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,EAAE,MAAM,EAAgB;QAC5B,MAAM,CAAC,OAAO,CAAC,CAAC,KAAa,EAAE,EAAE;YAC/B,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;CACF\"}","code":"import { uniqueId } from '../util';\r\nexport default class DisjoinedSet {\r\n    constructor(point) {\r\n        this.id = uniqueId();\r\n        this.points = [point];\r\n    }\r\n    equals({ id }) {\r\n        return this.id === id;\r\n    }\r\n    merge({ points }) {\r\n        points.forEach((point) => {\r\n            point.set = this;\r\n            this.points.push(point);\r\n        });\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=DisjoinedSet.js.map","dtsmap":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/triangulation/DisjoinedSet.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"DisjoinedSet.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/triangulation/DisjoinedSet.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,EAAE,EAAE,MAAM,eAAe,CAAC;AAEnC,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAEnC,MAAM,CAAC,OAAO,mBAAoB,YAAW,EAAE;IAC7C,EAAE,EAAE,MAAM,CAAc;IACxB,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC;gBAEd,KAAK,EAAE,MAAM;IAIzB,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,YAAY,GAAG,OAAO;IAIrC,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,YAAY,GAAG,YAAY;CAQ9C\"}"},"dts":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/triangulation/DisjoinedSet.d.ts","text":"import { id } from '../interfaces';\r\nimport { Vector } from '../common';\r\nexport default class DisjoinedSet implements id {\r\n    id: number;\r\n    readonly points: Vector[];\r\n    constructor(point: Vector);\r\n    equals({ id }: DisjoinedSet): boolean;\r\n    merge({ points }: DisjoinedSet): DisjoinedSet;\r\n}\r\n//# sourceMappingURL=DisjoinedSet.d.ts.map"}}
