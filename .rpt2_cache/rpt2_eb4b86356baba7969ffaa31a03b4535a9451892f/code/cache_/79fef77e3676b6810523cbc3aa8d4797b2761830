{"map":"{\"version\":3,\"file\":\"Obstacles.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/pathfinding/Obstacles.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { contains, findIndex, randomInt } from '../util';\r\nvar Obstacles = /** @class */ (function () {\r\n    function Obstacles(grid) {\r\n        this.grid = grid;\r\n        this.openList = [];\r\n        this.closedList = [];\r\n        this.openList = grid.tiles;\r\n    }\r\n    Object.defineProperty(Obstacles.prototype, \"list\", {\r\n        get: function () {\r\n            return this.closedList;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Obstacles.prototype.add = function (tile) {\r\n        tile.isObstacle = true;\r\n        return this.manipulate(true, tile);\r\n    };\r\n    Obstacles.prototype.remove = function (tile) {\r\n        tile.isObstacle = false;\r\n        return this.manipulate(false, tile);\r\n    };\r\n    Obstacles.prototype.addRandom = function (count) {\r\n        if (count === void 0) { count = 1; }\r\n        return this.manipulateMultipleRandom(true, count);\r\n    };\r\n    Obstacles.prototype.removeRandom = function (count) {\r\n        if (count === void 0) { count = 1; }\r\n        return this.manipulateMultipleRandom(false, count);\r\n    };\r\n    Obstacles.prototype.getRandomOpen = function () {\r\n        return this.getRandom(true);\r\n    };\r\n    Obstacles.prototype.getRandom = function (open) {\r\n        var list = open ? this.openList : this.closedList;\r\n        var random = randomInt(0, list.length - 1);\r\n        var tile = list[random];\r\n        return tile ? tile : null;\r\n    };\r\n    Obstacles.prototype.manipulateMultipleRandom = function (add, count) {\r\n        var tiles = [];\r\n        if (count > 0) {\r\n            for (var i = 0; i < count; i++) {\r\n                var tile = this.manipulateSingleRandom(add);\r\n                tiles.push(tile);\r\n            }\r\n            return count === 1 ? tiles[0] : tiles;\r\n        }\r\n        return null;\r\n    };\r\n    Obstacles.prototype.manipulateSingleRandom = function (add) {\r\n        var tile = this.getRandom(add);\r\n        if (tile) {\r\n            this.manipulate(add, tile);\r\n            return tile;\r\n        }\r\n        return null;\r\n    };\r\n    Obstacles.prototype.manipulate = function (add, tile) {\r\n        var isInvalid = add ? tile.isObstacle : !tile.isObstacle;\r\n        if (isInvalid) {\r\n            return false;\r\n        }\r\n        var list;\r\n        var otherList;\r\n        if (add) {\r\n            list = this.openList;\r\n            otherList = this.closedList;\r\n        }\r\n        else {\r\n            list = this.closedList;\r\n            otherList = this.openList;\r\n        }\r\n        if (contains(list, tile)) {\r\n            tile.isObstacle = add;\r\n            var index = findIndex(list, tile);\r\n            list.splice(index, 1);\r\n            otherList.push(tile);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return Obstacles;\r\n}());\r\nexport default Obstacles;\r\n//# sourceMappingURL=Obstacles.js.map","dtsmap":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/pathfinding/Obstacles.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"Obstacles.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/pathfinding/Obstacles.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAEpC,MAAM,CAAC,OAAO;IAIA,OAAO,CAAC,IAAI;IAHxB,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAuB;IAChD,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAuB;gBAE9B,IAAI,EAAE,IAAI;aAI1B,IAAI,EAAI,aAAa,EAAE;IAI3B,GAAG,CAAC,IAAI,EAAE,aAAa,GAAG,OAAO;IAKjC,MAAM,CAAC,IAAI,EAAE,aAAa,GAAG,OAAO;IAKpC,SAAS,CAAC,KAAK,GAAE,MAAU,GAAG,aAAa,GAAG,GAAG,GAAG,IAAI;IAIxD,YAAY,CAAC,KAAK,GAAE,MAAU,GAAG,aAAa,GAAG,GAAG,GAAG,IAAI;IAI3D,aAAa,IAAI,aAAa,GAAG,IAAI;IAIrC,OAAO,CAAC,SAAS;IAOjB,OAAO,CAAC,wBAAwB;IAkBhC,OAAO,CAAC,sBAAsB;IAW9B,OAAO,CAAC,UAAU;CA4BnB\"}"},"dts":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/pathfinding/Obstacles.d.ts","text":"import Grid from './Grid';\r\nimport NavigatorTile from './NavigatorTile';\r\nimport { row } from '../interfaces';\r\nexport default class Obstacles {\r\n    private grid;\r\n    private readonly openList;\r\n    private readonly closedList;\r\n    constructor(grid: Grid);\r\n    readonly list: NavigatorTile[];\r\n    add(tile: NavigatorTile): boolean;\r\n    remove(tile: NavigatorTile): boolean;\r\n    addRandom(count?: number): NavigatorTile | row | null;\r\n    removeRandom(count?: number): NavigatorTile | row | null;\r\n    getRandomOpen(): NavigatorTile | null;\r\n    private getRandom;\r\n    private manipulateMultipleRandom;\r\n    private manipulateSingleRandom;\r\n    private manipulate;\r\n}\r\n//# sourceMappingURL=Obstacles.d.ts.map"}}
