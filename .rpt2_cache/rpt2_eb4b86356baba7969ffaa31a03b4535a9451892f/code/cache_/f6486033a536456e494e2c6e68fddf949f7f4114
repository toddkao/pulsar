{"map":"{\"version\":3,\"file\":\"MinimumSpanningTree.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/triangulation/MinimumSpanningTree.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AAGjC;IAME,6BAAY,EAAwB;YAAtB,gBAAK;QALV,UAAK,GAAW,EAAE,CAAC;QACpB,qBAAgB,GAAW,EAAE,CAAC;QAC9B,gBAAW,GAAW,EAAE,CAAC;QAChB,uBAAkB,GAAW,EAAE,CAAC;QAG/C,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IAClC,CAAC;IAED,sBAAI,gDAAe;aAAnB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAC/B,CAAC;;;OAAA;IAED,mCAAK,GAAL;QAAA,iBAcC;QAbC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,IAAU,IAAK,OAAA,IAAI,CAAC,iBAAiB,EAAE,EAAxB,CAAwB,CAAC,CAAC;QAEnE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,IAAU,EAAE,CAAS;YAC7C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;gBAClC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1C,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAC,IAAU,IAAK,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;IAC7E,CAAC;IAEO,sCAAQ,GAAhB;QACE,IAAI,KAAK,GAAW,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACnE,IAAI,CAAC,WAAW,GAAO,KAAK,QAAC,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAO,KAAK,QAAC,CAAC;IACrC,CAAC;IACH,0BAAC;AAAD,CAAC,AAnCD,IAmCC\"}","code":"import { Line } from '../common';\r\nvar MinimumSpanningTree = /** @class */ (function () {\r\n    function MinimumSpanningTree(_a) {\r\n        var lines = _a.lines;\r\n        this.lines = [];\r\n        this._nonMinSpanLines = [];\r\n        this.uniqueLines = [];\r\n        this.triangulationLines = [];\r\n        this.triangulationLines = lines;\r\n    }\r\n    Object.defineProperty(MinimumSpanningTree.prototype, \"nonMinSpanLines\", {\r\n        get: function () {\r\n            return this._nonMinSpanLines;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MinimumSpanningTree.prototype.start = function () {\r\n        var _this = this;\r\n        this.getLines();\r\n        this.uniqueLines.forEach(function (line) { return line.makeDisjoinedSets(); });\r\n        this.uniqueLines.forEach(function (line, i) {\r\n            if (!line.a.set.equals(line.b.set)) {\r\n                line.b.set = line.a.set.merge(line.b.set);\r\n                _this.lines.push(line);\r\n                _this._nonMinSpanLines[i] = null;\r\n            }\r\n        });\r\n        this._nonMinSpanLines = this._nonMinSpanLines.filter(function (line) { return line; });\r\n    };\r\n    MinimumSpanningTree.prototype.getLines = function () {\r\n        var lines = Line.RemoveDuplicates(this.triangulationLines);\r\n        this.uniqueLines = lines.slice();\r\n        this._nonMinSpanLines = lines.slice();\r\n    };\r\n    return MinimumSpanningTree;\r\n}());\r\nexport default MinimumSpanningTree;\r\n//# sourceMappingURL=MinimumSpanningTree.js.map","dtsmap":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/triangulation/MinimumSpanningTree.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"MinimumSpanningTree.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/triangulation/MinimumSpanningTree.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAE5C,MAAM,CAAC,OAAO;IACZ,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,CAAM;IAC5B,OAAO,CAAC,gBAAgB,CAAc;IACtC,OAAO,CAAC,WAAW,CAAc;IACjC,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAc;gBAErC,EAAE,KAAK,EAAE,EAAE,aAAa;aAIhC,eAAe,EAAI,IAAI,EAAE;IAI7B,KAAK,IAAI,IAAI;IAgBb,OAAO,CAAC,QAAQ;CAKjB\"}"},"dts":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/triangulation/MinimumSpanningTree.d.ts","text":"import { Line } from '../common';\r\nimport Triangulation from './Triangulation';\r\nexport default class MinimumSpanningTree {\r\n    readonly lines: Line[];\r\n    private _nonMinSpanLines;\r\n    private uniqueLines;\r\n    private readonly triangulationLines;\r\n    constructor({ lines }: Triangulation);\r\n    readonly nonMinSpanLines: Line[];\r\n    start(): void;\r\n    private getLines;\r\n}\r\n//# sourceMappingURL=MinimumSpanningTree.d.ts.map"}}
