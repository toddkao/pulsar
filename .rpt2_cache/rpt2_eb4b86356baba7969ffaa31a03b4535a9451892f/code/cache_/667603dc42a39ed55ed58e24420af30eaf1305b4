{"map":"{\"version\":3,\"file\":\"Navigator.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/pathfinding/Navigator.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { uniqueId, contains } from '../util';\r\nvar Navigator = /** @class */ (function () {\r\n    function Navigator(_a) {\r\n        var grid = _a.grid, begin = _a.begin, end = _a.end, onExplore = _a.onExplore, onComplete = _a.onComplete, maxSteps = _a.maxSteps;\r\n        this.id = uniqueId();\r\n        this._path = [];\r\n        this.verticalCost = 1;\r\n        this.diagonalCost = 1.4;\r\n        this.tiles = [];\r\n        this.open = [];\r\n        this.closed = [];\r\n        this.registeredTiles = [];\r\n        this.steps = 0;\r\n        this.grid = grid;\r\n        this.begin = begin;\r\n        this.end = end;\r\n        this.onExplore = onExplore || (function () { });\r\n        this.onComplete = onComplete || (function () { });\r\n        this.maxSteps = maxSteps !== undefined ? maxSteps : Infinity;\r\n    }\r\n    Object.defineProperty(Navigator.prototype, \"path\", {\r\n        get: function () {\r\n            return this._path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Begin the pathfinding process. Does not start if destination is an obstacle. */\r\n    Navigator.prototype.start = function () {\r\n        if (this.end.isObstacle) {\r\n            return false;\r\n        }\r\n        this.closed.push(this.begin);\r\n        var beginNavData = this.begin.getNavigatorData(this);\r\n        this.addToExplored(this.begin);\r\n        beginNavData.gVal = 0;\r\n        this.calculateG(this.begin);\r\n        return true;\r\n    };\r\n    Navigator.prototype.deregisterNavigatorData = function () {\r\n        var _this = this;\r\n        this.registeredTiles.forEach(function (tile) {\r\n            return tile.deregisterNavigatorData(_this);\r\n        });\r\n    };\r\n    Navigator.prototype.calculateH = function (tile) {\r\n        var colVal = Math.abs(tile.position.x - this.end.position.x);\r\n        var rowVal = Math.abs(tile.position.y - this.end.position.y);\r\n        return colVal + rowVal;\r\n    };\r\n    Navigator.prototype.calculateG = function (tile) {\r\n        var tileNavData = tile.getNavigatorData(this);\r\n        this.addToExplored(tile);\r\n        if (++this.steps === this.maxSteps) {\r\n            this.done([]);\r\n            return;\r\n        }\r\n        for (var i = 0; i < Navigator.neighborsCount; i++) {\r\n            var x = tile.position.x + Navigator.getColOffset(i);\r\n            var y = tile.position.y + Navigator.getRowOffset(i);\r\n            var exploring = this.grid.findTile({ x: x, y: y });\r\n            if (!exploring) {\r\n                continue;\r\n            }\r\n            var exploringNavData = exploring.getNavigatorData(this);\r\n            this.addToExplored(exploring);\r\n            if (exploring.isObstacle) {\r\n                continue;\r\n            }\r\n            if (contains(this.closed, exploring)) {\r\n                continue;\r\n            }\r\n            if (tile.id === exploring.id) {\r\n                this.closed.push(exploring);\r\n            }\r\n            else {\r\n                if (!this.getParent(tile, exploring, tileNavData, exploringNavData)) {\r\n                    continue;\r\n                }\r\n                if (!contains(this.open, exploring)) {\r\n                    this.open.push(exploring);\r\n                }\r\n                if (tile.isDiagonal(exploring)) {\r\n                    exploringNavData.gVal = tileNavData.gVal + this.diagonalCost;\r\n                }\r\n                else {\r\n                    exploringNavData.gVal = tileNavData.gVal + this.verticalCost;\r\n                }\r\n            }\r\n            exploringNavData.fVal = this.calculateF(exploring, exploringNavData);\r\n        }\r\n        var next = this.chooseNext();\r\n        if (next) {\r\n            this.onExplore(next);\r\n            this.calculateG(next);\r\n        }\r\n        else {\r\n            var path = this.getPath();\r\n            this.done(path);\r\n        }\r\n    };\r\n    Navigator.prototype.done = function (path) {\r\n        this.deregisterNavigatorData();\r\n        this.onComplete(path);\r\n    };\r\n    Navigator.prototype.calculateF = function (tile, data) {\r\n        var hVal = this.calculateH(tile);\r\n        return data.gVal + hVal;\r\n    };\r\n    Navigator.getRowOffset = function (iteration) {\r\n        /*\r\n           iteration = 0, 1, or 2: [-1][-1][-1]\r\n           iteration = 3, 4, or 5: [ 0][ 0][ 0]\r\n           iteration = 6, 7, or 8: [+1][+1][+1]\r\n         */\r\n        return Navigator.neighborsCount + -Math.floor((32 - iteration) / 3);\r\n    };\r\n    Navigator.getColOffset = function (iteration) {\r\n        /*\r\n           iteration = 0, 1, or 2: [-1][ 0][+1]\r\n           iteration = 3, 4, or 5: [-1][ 0][+1]\r\n           iteration = 6, 7, or 8: [-1][ 0][+1]\r\n         */\r\n        return (iteration % 3) - 1;\r\n    };\r\n    Navigator.prototype.getParent = function (tile, checkTile, tileNavData, checkNavData) {\r\n        if (!checkNavData.parent) {\r\n            checkNavData.parent = tile;\r\n            return tile;\r\n        }\r\n        var moveCost = tile.isDiagonal(checkTile)\r\n            ? this.diagonalCost\r\n            : this.verticalCost;\r\n        if (tileNavData.gVal + moveCost < checkNavData.gVal) {\r\n            checkNavData.parent = tile;\r\n            return tile;\r\n        }\r\n        return null;\r\n    };\r\n    Navigator.prototype.chooseNext = function () {\r\n        var _this = this;\r\n        this.open.sort(function (a, b) {\r\n            var aNavData = a.getNavigatorData(_this);\r\n            var bNavData = b.getNavigatorData(_this);\r\n            return aNavData.fVal - bNavData.fVal;\r\n        });\r\n        var next = this.open[0];\r\n        if (!next) {\r\n            return null;\r\n        }\r\n        this.open.shift();\r\n        this.closed.push(next);\r\n        if (next.id === this.end.id) {\r\n            return null;\r\n        }\r\n        return next;\r\n    };\r\n    Navigator.prototype.getPath = function () {\r\n        this._path = [];\r\n        var current = this.end;\r\n        while (current.id !== this.begin.id) {\r\n            var currentNavData = current.getNavigatorData(this);\r\n            this._path.push(current);\r\n            if (currentNavData.parent) {\r\n                current = currentNavData.parent;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n        this._path.reverse();\r\n        return this._path;\r\n    };\r\n    Navigator.prototype.addToExplored = function (tile) {\r\n        if (!contains(this.registeredTiles, tile)) {\r\n            this.registeredTiles.push(tile);\r\n        }\r\n    };\r\n    Navigator.neighborsCount = 9;\r\n    return Navigator;\r\n}());\r\nexport default Navigator;\r\n//# sourceMappingURL=Navigator.js.map","dtsmap":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/pathfinding/Navigator.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"Navigator.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/pathfinding/Navigator.ts\"],\"names\":[],\"mappings\":\"AAGA,OAAO,EAAE,GAAG,EAAE,EAAE,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAM3D,MAAM,CAAC,OAAO,gBAAiB,YAAW,EAAE;IAC1C,EAAE,EAAE,MAAM,CAAc;IACxB,OAAO,CAAC,KAAK,CAAW;IACxB,OAAO,CAAC,YAAY,CAAa;IACjC,OAAO,CAAC,YAAY,CAAe;IACnC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAa;IAC1C,OAAO,CAAC,KAAK,CAAW;IACxB,OAAO,CAAC,IAAI,CAAW;IACvB,OAAO,CAAC,MAAM,CAAW;IACzB,OAAO,CAAC,eAAe,CAAuB;IAE9C,OAAO,CAAC,IAAI,CAAO;IACnB,OAAO,CAAC,KAAK,CAAgB;IAC7B,OAAO,CAAC,GAAG,CAAgB;IAC3B,OAAO,CAAC,SAAS,CAAgC;IACjD,OAAO,CAAC,UAAU,CAAkC;IACpD,OAAO,CAAC,QAAQ,CAAS;IACzB,OAAO,CAAC,KAAK,CAAa;gBAEd,EACV,IAAI,EACJ,KAAK,EACL,GAAG,EACH,SAAS,EACT,UAAU,EACV,QAAQ,GACT,EAAE,iBAAiB;aAShB,IAAI,EAAI,GAAG;IAIf,mFAAmF;IACnF,KAAK,IAAI,OAAO;IAahB,OAAO,CAAC,uBAAuB;IAM/B,OAAO,CAAC,UAAU;IAMlB,OAAO,CAAC,UAAU;IA6DlB,OAAO,CAAC,IAAI;IAKZ,OAAO,CAAC,UAAU;IAKlB,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,GAAG,MAAM;IAS9C,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,MAAM,GAAG,MAAM;IAS9C,OAAO,CAAC,SAAS;IAuBjB,OAAO,CAAC,UAAU;IAuBlB,OAAO,CAAC,OAAO;IAmBf,OAAO,CAAC,aAAa;CAKtB\"}"},"dts":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/pathfinding/Navigator.d.ts","text":"import { row, id, navigatorSettings } from '../interfaces';\r\nexport default class Navigator implements id {\r\n    id: number;\r\n    private _path;\r\n    private verticalCost;\r\n    private diagonalCost;\r\n    private static neighborsCount;\r\n    private tiles;\r\n    private open;\r\n    private closed;\r\n    private registeredTiles;\r\n    private grid;\r\n    private begin;\r\n    private end;\r\n    private onExplore;\r\n    private onComplete;\r\n    private maxSteps;\r\n    private steps;\r\n    constructor({ grid, begin, end, onExplore, onComplete, maxSteps, }: navigatorSettings);\r\n    readonly path: row;\r\n    /** Begin the pathfinding process. Does not start if destination is an obstacle. */\r\n    start(): boolean;\r\n    private deregisterNavigatorData;\r\n    private calculateH;\r\n    private calculateG;\r\n    private done;\r\n    private calculateF;\r\n    static getRowOffset(iteration: number): number;\r\n    static getColOffset(iteration: number): number;\r\n    private getParent;\r\n    private chooseNext;\r\n    private getPath;\r\n    private addToExplored;\r\n}\r\n//# sourceMappingURL=Navigator.d.ts.map"}}
