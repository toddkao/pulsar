{"map":"{\"version\":3,\"file\":\"Triangulation.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/triangulation/Triangulation.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { Vector, Triangle } from '../common';\r\nimport Hull from './Hull';\r\nimport MinimumSpanningTree from './MinimumSpanningTree';\r\nexport default class Triangulation {\r\n    constructor(points) {\r\n        this.points = points;\r\n        this.lines = [];\r\n        this.triangles = [];\r\n        this.holderTriangle = Triangulation.MakeHolderTriangle();\r\n        this.triangles.push(this.holderTriangle);\r\n        this.hull = new Hull(this);\r\n        this.MST = new MinimumSpanningTree(this);\r\n    }\r\n    start() {\r\n        this.points.forEach((point) => {\r\n            const badTriangles = [];\r\n            for (let i = this.triangles.length - 1; i >= 0; i--) {\r\n                const triangle = this.triangles[i];\r\n                if (triangle.isPointInCircumcircle(point)) {\r\n                    this.triangles.splice(i, 1);\r\n                    badTriangles.push(triangle);\r\n                }\r\n            }\r\n            const uniqueLines = Triangle.GetUniqueLines(badTriangles);\r\n            uniqueLines.forEach((line) => {\r\n                const triangle = new Triangle(point, line.a, line.b);\r\n                this.triangles.push(triangle);\r\n            });\r\n        });\r\n        this.cleanHolderTriangle();\r\n        this.addFinishedTriangulationLines();\r\n    }\r\n    static MakeHolderTriangle() {\r\n        const side = Number.MAX_SAFE_INTEGER;\r\n        const a = new Vector({ x: side / 2, y: -side });\r\n        const b = new Vector({ x: -side, y: side });\r\n        const c = new Vector({ x: side, y: side });\r\n        return new Triangle(a, b, c);\r\n    }\r\n    cleanHolderTriangle() {\r\n        const { a, b, c } = this.holderTriangle;\r\n        for (let i = this.triangles.length - 1; i >= 0; i--) {\r\n            const triangle = this.triangles[i];\r\n            if (triangle.hasAnyPoint([a, b, c])) {\r\n                this.triangles.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n    addFinishedTriangulationLines() {\r\n        this.triangles.forEach((triangle) => {\r\n            this.lines.push(...triangle.linesArray);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Triangulation.js.map","dtsmap":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/triangulation/Triangulation.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"Triangulation.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/triangulation/Triangulation.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAC;AACnD,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,OAAO,mBAAmB,MAAM,uBAAuB,CAAC;AAExD,MAAM,CAAC,OAAO;IAOA,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE;IANrC,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,CAAM;IAC5B,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,CAAM;IACpC,QAAQ,CAAC,GAAG,EAAE,mBAAmB,CAAC;IAClC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;IACpB,OAAO,CAAC,cAAc,CAAgD;gBAEjD,MAAM,EAAE,MAAM,EAAE;IAMrC,KAAK,IAAI,IAAI;IAyBb,OAAO,CAAC,MAAM,CAAC,kBAAkB;IASjC,OAAO,CAAC,mBAAmB;IAY3B,OAAO,CAAC,6BAA6B;CAKtC\"}"},"dts":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/triangulation/Triangulation.d.ts","text":"import { Vector, Line, Triangle } from '../common';\r\nimport Hull from './Hull';\r\nimport MinimumSpanningTree from './MinimumSpanningTree';\r\nexport default class Triangulation {\r\n    readonly points: Vector[];\r\n    readonly lines: Line[];\r\n    readonly triangles: Triangle[];\r\n    readonly MST: MinimumSpanningTree;\r\n    readonly hull: Hull;\r\n    private holderTriangle;\r\n    constructor(points: Vector[]);\r\n    start(): void;\r\n    private static MakeHolderTriangle;\r\n    private cleanHolderTriangle;\r\n    private addFinishedTriangulationLines;\r\n}\r\n//# sourceMappingURL=Triangulation.d.ts.map"}}
