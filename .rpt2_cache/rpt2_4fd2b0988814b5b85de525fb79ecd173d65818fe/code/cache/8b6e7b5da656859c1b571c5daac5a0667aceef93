{"map":"{\"version\":3,\"file\":\"Line.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/common/Line.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { uniqueId } from '../util';\r\nimport DisjoinedSet from '../triangulation/DisjoinedSet';\r\nimport LineIntersection from './LineIntersection';\r\nexport default class Line {\r\n    constructor(a, b) {\r\n        this.a = a;\r\n        this.b = b;\r\n        this.id = uniqueId();\r\n    }\r\n    get length() {\r\n        return this.a.sub(this.b).magnitude();\r\n    }\r\n    get midpoint() {\r\n        return this.a.midpoint(this.b);\r\n    }\r\n    clone() {\r\n        return new Line(this.a, this.b);\r\n    }\r\n    equals(line) {\r\n        const equalsNormal = this.a.equals(line.a) && this.b.equals(line.b);\r\n        const equalsReverse = this.a.equals(line.b) && this.b.equals(line.a);\r\n        return equalsNormal || equalsReverse;\r\n    }\r\n    intersects(line) {\r\n        return new LineIntersection(this, line).intersects;\r\n    }\r\n    intersectionPoint(line) {\r\n        return new LineIntersection(this, line).point;\r\n    }\r\n    makeDisjoinedSets() {\r\n        this.a.set = new DisjoinedSet(this.a);\r\n        this.b.set = new DisjoinedSet(this.b);\r\n    }\r\n    static PointsFromArray(lines) {\r\n        return lines.reduce((accumulator, line) => {\r\n            accumulator.push(...[line.a, line.b]);\r\n            return accumulator;\r\n        }, []);\r\n    }\r\n    static IsUnique(line, lines) {\r\n        return (lines.find((currentLine) => {\r\n            return line.id === currentLine.id ? false : line.equals(currentLine);\r\n        }) === undefined);\r\n    }\r\n    static RemoveDuplicates(lines) {\r\n        let clone = [...lines];\r\n        clone.sort((a, b) => a.length - b.length);\r\n        for (let i = clone.length - 1; i >= 1; i--) {\r\n            const a = clone[i];\r\n            const b = clone[i - 1];\r\n            if (a.equals(b)) {\r\n                clone.splice(i, 1);\r\n            }\r\n        }\r\n        return clone;\r\n    }\r\n}\r\n//# sourceMappingURL=Line.js.map","dtsmap":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/common/Line.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"Line.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../src/common/Line.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,EAAE,EAAE,MAAM,eAAe,CAAC;AAInC,OAAO,MAAM,MAAM,UAAU,CAAC;AAE9B,MAAM,CAAC,OAAO,WAAY,YAAW,EAAE;IAEzB,QAAQ,CAAC,CAAC,EAAE,MAAM;IAAE,QAAQ,CAAC,CAAC,EAAE,MAAM;IADlD,EAAE,EAAE,MAAM,CAAc;gBACH,CAAC,EAAE,MAAM,EAAW,CAAC,EAAE,MAAM;aAE9C,MAAM,EAAI,MAAM;aAIhB,QAAQ,EAAI,MAAM;IAItB,KAAK,IAAI,IAAI;IAIb,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG,OAAO;IAQ3B,UAAU,CAAC,IAAI,EAAE,IAAI,GAAG,OAAO;IAI/B,iBAAiB,CAAC,IAAI,EAAE,IAAI,GAAG,MAAM;IAIrC,iBAAiB,IAAI,IAAI;IAKzB,MAAM,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,EAAE;IAO/C,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,OAAO;IAQnD,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,EAAE;CAgB/C\"}"},"dts":{"name":"/Users/radu.milici/Documents/git/pulsar-pathfinding/common/Line.d.ts","text":"import { id } from '../interfaces';\r\nimport Vector from './Vector';\r\nexport default class Line implements id {\r\n    readonly a: Vector;\r\n    readonly b: Vector;\r\n    id: number;\r\n    constructor(a: Vector, b: Vector);\r\n    readonly length: number;\r\n    readonly midpoint: Vector;\r\n    clone(): Line;\r\n    equals(line: Line): boolean;\r\n    intersects(line: Line): boolean;\r\n    intersectionPoint(line: Line): Vector;\r\n    makeDisjoinedSets(): void;\r\n    static PointsFromArray(lines: Line[]): Vector[];\r\n    static IsUnique(line: Line, lines: Line[]): boolean;\r\n    static RemoveDuplicates(lines: Line[]): Line[];\r\n}\r\n//# sourceMappingURL=Line.d.ts.map"}}
